name: "Build & Publish"

on:
  push:
    branches:
      - master

  workflow_dispatch:
    inputs:
      module:
        default: audit
        description: Select module for pushing to artifactory
        type: choice
        options:
          - audit
          - module1
  workflow_call:
    inputs:
      branch:
        required: false
        type: string
      tag_name:
        required: true
        type: string

env:
  JAVA_VERSION: "21"
  AUDIT_MODULE: "audit"

jobs:
  define-module-to-push:
    runs-on: ubuntu-latest
    name: Generate updated files
    outputs:
      module: ${{ steps.vars.outputs.module }}
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - name: Detect changes
        id: vars
        run: |
          chmod +x ./scripts/changed_files.sh
          
          ./scripts/changed_files.sh "$(git rev-parse ${{ github.sha }}^)" ${{ github.sha }}
          echo "$(git rev-parse ${{ github.sha }}^)"
          echo "${{ github.sha }}"
      
          while read line; do arr+=("$line"); done < ../changed_files.lst
          val=$(echo ${arr[*]})
          echo "$val"
          echo "module=$val" >> $GITHUB_OUTPUT
  publish-image:
    name: 'Build & Publish'
    runs-on: 'ubuntu-latest'
    needs: define-module-to-push
    steps:
      - name: 'SETUP - Checkout code'
        uses: 'actions/checkout@v4.1.7'
        with:
          ref: ${{ inputs.branch }}

      - name: 'Build & Publish Audit-Utility Artifact to Jfrog Artifactory'
        if: ${{ contains(needs.define-module-to-push.outputs.module, env.AUDIT_MODULE) || inputs.module == 'audit' }}
        env:
          ORG_GRADLE_PROJECT_artifactory_user: ${{ secrets.PLAT_LIAM_ARTIFACTORY_USER }}
          ORG_GRADLE_PROJECT_artifactory_password: ${{ secrets.PLAT_LIAM_ARTIFACTORY_TOKEN }}
        run: |
          ref=${GITHUB_REF#refs/heads/}
          echo "-- -- -- -- -- -- -- "
          echo $ref
          echo "-- -- -- -- -- -- -- "
          if $ref == 'master'; then
          echo "w-beta"
          else
          echo "${GITHUB_REF#refs/heads/}"
          echo "--end"
          fi
          echo "-------"
          echo "${{ github.ref }}"
          echo "======="
          echo "${GITHUB_REF#refs/heads/}"
          echo "w-beta"
          echo "-----------------------"
          echo "Packaging and pushing artifact with version '${{ github.ref }}'"
